@page "/CreateNewShoppingList"
@inject NavigationManager Navigation
@using DemoBlazor.Model
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject NavigationManager Navigation
@inject ProtectedSessionStorage SessionStorage
@using System.Collections.Generic


<h1>Create New Shopping List</h1>

<section class="shopping-container">
    <!-- Vänstra sektionen: Formulär -->
    <section class="shopping-form">
        <fieldset>
            <legend>Shopping List Details</legend>

            <div>
                <label>Shopping List Name:</label>
                <input type="text" class="form-control" @bind="ShoppingList.Title" placeholder="Enter List Name" />
            </div>

            <div>
                <label>Category:</label>
                <select class="form-control" @bind="NewProduct.Category">
                    <option value="">--Select Category--</option>
                    <option value="Fruits & Vegetables">Fruits & Vegetables</option>
                    <option value="Fridge">Fridge items</option>
                    <option value="Freezer">Freezer items</option>
                    <option value="Pantry">Pantry items</option>
                    <option value="Hygiene">Hygiene items</option>
                    <option value="Other">Other</option>
                </select>
            </div>

            <div>
                <label>Product Name:</label>
                <input type="text" class="form-control" @bind="NewProduct.Name" placeholder="Enter product name" />
            </div>

            <div>
                <label>Amount:</label>
                <input type="number" class="form-control" @bind="NewProduct.Amount" min="1" step="1" />
            </div>
        </fieldset>

        <nav class="button-group">
            <!-- Change to button and add @onclick -->
            <button class="btn btn-primary" @onclick="AddProductToList">
                <i class="bi bi-plus-circle"></i> Add to List
            </button>

            <a href="/mypage" class="btn btn-success">Create Shopping List</a>

            <a href="/mypage" class="btn btn-danger">Cancel</a>
        </nav>
    </section>

    <!-- Realtidslista -->
    <section class="shopping-list">
        <h2>Your Shopping List:</h2>
        <ul>
            @foreach (var item in ShoppingList.Products)
            {
                <li class="shopping-list-item">
                    <strong>@item.Category:</strong> @item.Name (@item.Amount)
                </li>
            }
        </ul>
    </section>

    <!-- Recently Purchased List -->
    <section class="recently-purchased">
        <h3>Recently Purchased</h3>
        <ul>
            @foreach (var product in RecentlyPurchased)
            {
                <li class="recently-purchased-item">
                    <strong>@product.Category:</strong> @product.Name (@product.Amount)
                </li>
            }
        </ul>
    </section>
</section>

@code {
    private ShoppingList ShoppingList { get; set; } = new ShoppingList
        {
            Title = "My Shopping List",
            Products = new List<Product>()
        };

    private Product NewProduct { get; set; } = new Product();

    private List<Product> RecentlyPurchased { get; set; } = new List<Product>
    {
        new Product { Name = "Milk", Category = "Dairy", Amount = 1 },
        new Product { Name = "Bread", Category = "Bakery", Amount = 1 },
        new Product { Name = "Eggs", Category = "Dairy", Amount = 12 }
    };

    private void AddProductToList()
    {
        Console.WriteLine("AddProductToList method called"); // Debugging statement

        if (!string.IsNullOrWhiteSpace(NewProduct.Name) && !string.IsNullOrWhiteSpace(NewProduct.Category) && NewProduct.Amount > 0)
        {
            ShoppingList.Products.Add(new Product
                {
                    Name = NewProduct.Name,
                    Category = NewProduct.Category,
                    Amount = NewProduct.Amount
                });

            // Clear the form fields after adding the product
            NewProduct = new Product();

            Console.WriteLine("Product added to list"); // Debugging statement
        }
        else
        {
            Console.WriteLine("Invalid product details"); // Debugging statement
        }
    }
}
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #2c2c2c;
        color: white;
    }

    .shopping-container {
        display: flex;
        justify-content: space-between;
        max-width: 900px;
        margin: auto;
    }

    .shopping-form, .shopping-list, .recently-purchased {
        background-color: #444;
        padding: 15px;
        border-radius: 8px;
        width: 30%;
        color: white;
        font-size: 14px;
    }

        .shopping-list h2, .recently-purchased h3 {
            font-size: 18px;
            text-align: center;
        }

    .button-group {
        display: flex;
        gap: 5px; /* Lägger mellanrum mellan knapparna */
        margin-top: 10px;
    }

    .btn {
        display: inline-block;
        font-size: 16px;
        text-align: center;
        text-decoration: none;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    /* Knapparnas färger */
    .btn-primary {
        background-color: blue;
        color: white;
    }

    .btn-success {
        background-color: green;
        color: white;
    }

    .btn-danger {
        background-color: red;
        color: white;
    }

    /* Hover-effekt */
    .btn-primary:hover {
        background-color: darkblue;
    }

    .btn-success:hover {
        background-color: darkgreen;
    }

    .btn-danger:hover {
        background-color: darkred;
    }

</style>
